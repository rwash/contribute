require 'spec_helper'
require 'integration_helper'

feature 'Projects' do

  let!(:projects) { 4.times.map { create :active_project } }

  describe 'blocking process' do
    let(:admin) { create :user, admin: true }
    before { login_as admin }

    before do
      visit project_path(project)
      click_button 'Block Project'
      expect(page).to have_content 'Successfully blocked'
      expect(current_path).to eq project_path(project)
      click_button 'Unblock Project'
      expect(page).to have_content 'Successfully unblocked'
    end

    context 'starting with unconfirmed project' do
      let(:project) { create :project, state: :unconfirmed }

      scenario "should set the project state to 'unconfirmed'" do
        expect(project.reload.state).to eq :unconfirmed
      end
    end

    context 'starting with inactive project' do
      # NOTE
      # This payment account ID was generated by creating a new project, confirming it through amazon, and then looking at the generated value.
      # This will be different for each project in the real application
      # TODO Move this into a factory, perhaps with a helper method to generate a random string of the same format.
      let(:project) { create :active_project, state: :inactive }

      scenario "should set the project state to 'unconfirmed'" do
        expect(project.reload.state).to eq :inactive
      end
    end

    context 'starting with active project' do
      let(:project) { create :active_project }

      scenario "should set the project state to 'inactive'" do
        expect(project.reload.state).to eq :inactive
      end
    end
  end
end
